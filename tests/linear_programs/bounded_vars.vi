
mod liana = "../../src/liana.vi";

use liana::linear_program::{LinearProgram, Objective};
use liana::constraint::{Constraint, ConstraintType::Le};
use liana::term::Term;

pub fn main(&io: &IO) {
  let lp = LinearProgram::new();
  // Create variables with different bounds
  // x >= -3
  let x = lp.new_var("x", -3.0, F32::inf);
  // 0 <= y <= 5
  let y = lp.new_var("y", 0.0, 5.0);
  // z unbounded
  let z = lp.new_var("z", -F32::inf, F32::inf);

  // Add constraints
  lp.add_constraint(Constraint(x + 2.0 * y + z, Le, 10.0 as Term));
  lp.add_constraint(Constraint(3.0 * x + y - 2.0 * z, Le, 6.0 as Term));

  // Set objective
  lp.set_objective(Objective::Maximize(x + 4.0 * y - z));

  let solution = lp.solve();
  io.println("{solution.show()}");
}
